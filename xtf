#!/bin/bash                   
# xhricma00 Marek Hric
# 07.03.2024


export POSIXLY_CORRECT=yes 
export LC_ALL=C 

usage(){
    echo "Usage: $(basename "$0") [-h|--help] [FILTER] [COMMAND] USER LOG [LOG2 [...]]
        
    COMMAND may be one of:
        list - a listing of records for a given user.
        list-currency - a listing of a sorted list of occurring currencies.
        status - a listing of the actual account status grouped and sorted by currency.
        profit - a statement of the customer's account status with notional profit included.
    FILTER can be a combination of the following:
        -a DATETIME - after: only records AFTER this date and time (without it) are considered. DATETIME is of format YYYY-MM-DD HH:MM:SS.
        -b DATETIME - before: only records BEFORE this date and time (without it) are considered.
        -c CURRENCY - only records corresponding to the given currency are considered.
    -h and --help print a help message with a short description of each command and switch."
    exit "$1"
}

ab_set_error(){
    echo "Error: Option set multiple times" >&2
    usage 1
}

two_names_set_error(){
    echo "Error: Two names set" >&2
    usage 1
}

user=''
command=""
a_flag=false
b_flag=false
c_flag=false


#args=( "$@" ) #save all arguments in array
# da sa vynechat, pouzivat vzdy len $1 a shiftovat

while [[ -n $1 ]]; do #iterate through the whole array
    echo "$1"

    case "$1" in #switch
        -h|--help)
            usage 0
            ;;
        -a)
            if [[ $a_flag = true ]]; then
                ab_set_error
            fi
            a_flag=true
            ;; #expect value
        -b)
            if [[ $b_flag = true ]]; then
                ab_set_error
            fi
            b_flag=true
            ;; #expect value
        -c)
            c_flag=true
            ;; #expect value
        list|list-currency|status|profit)
           command="$1"
           ;;
        *)
            if [ ! -f "$1" ]; then
                if [ -z "$user" ]; then
                    user="$1"
                else 
                    two_names_set_error
                fi

            fi
            # -f filename - validacia ci subor je subor
    esac
    shift
done


echo ""
echo "command: $command"
echo "a: $a_flag"
echo "b: $b_flag"
echo "c: $c_flag"
echo "user: $user"
